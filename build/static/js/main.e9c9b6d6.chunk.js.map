{"version":3,"sources":["AppTodos.js","AppList.js","AppForm.js","App.js","index.js"],"names":["styles","paddingLeft","paddingRight","position","marginLeft","marginRight","AppTodos","this","props","ChangeCompleteItem","id","DeleteItem","className","style","delete","onClick","handleChangeComplete","bind","complete","title","color","text","fontSize","handleDelete","Divider","variant","React","Component","AppList","DeleteItemTop","ChangeCompleteTop","console","log","data","value","choosevalue","a","map","index","deleteFlag","ChangeDone","SubmitDelete","width","display","verticalAlign","AppForm","event","preventDefault","refs","trim","Math","floor","random","AddTodoItem","alert","onSubmit","handleSubmit","type","placeholder","ref","App","state","setState","newItem","newdata","concat","item","face","OnAddTodoItem","AllChangeComplete","AllOnDeleteItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9c9b6d6.chunk.js","sourcesContent":["import React from 'react'; \r\nimport Delete from '@material-ui/icons/DeleteForever';\r\nimport DoneAll from '@material-ui/icons/DoneAll';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nvar styles = {\r\n  'title': {\r\n    paddingLeft: '20px',\r\n    paddingRight: '50px',\r\n    position: 'relative'\r\n  },\r\n  'delete': {\r\n    marginLeft: '0px',\r\n    marginRight: '20px'\r\n  }\r\n}\r\n\r\nclass AppTodos extends React.Component {\r\n\r\n    handleChangeComplete () {\r\n        let newComplete = this.props;\r\n        this.props.ChangeCompleteItem(this.props.id);\r\n    }\r\n    \r\n    handleDelete () {\r\n        this.props.DeleteItem(this.props.id);\r\n    }\r\n\r\n  render () {\r\n    return (\r\n      <div className='comment'>\r\n        \r\n        <div className='content'>\r\n        \r\n          <DoneAll className='author' \r\n                style={styles.delete}\r\n                onClick={this.handleChangeComplete.bind(this)}>\r\n                {this.props.complete ? '已完成' : '未完成'}\r\n          </DoneAll>\r\n\r\n\r\n          <span className='author' \r\n                style={styles.title} \r\n                >\r\n              <font color = \"redblue\"><b>{this.props.text}</b></font>\r\n              <span className={this.props.complete ? 'line' : ''} />\r\n          </span>\r\n          \r\n\r\n          <Delete className='ui blue button' \r\n                style={styles.delete} \r\n                color=\"secondary\"\r\n                style={{ fontSize: 21 }}\r\n                onClick={this.handleDelete.bind(this)}>\r\n                刪除\r\n          </Delete>  \r\n          \r\n        </div>\r\n        <Divider  variant=\"inset\" />\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default AppTodos;","import React from 'react'\r\nimport AppTodos from './AppTodos'\r\n\r\nclass AppList extends React.Component {\r\n\r\n    SubmitDelete (id) {\r\n       //console.log(id);\r\n        this.props.DeleteItemTop(id);\r\n      }\r\n    \r\n      ChangeDone (id) {\r\n        this.props.ChangeCompleteTop(id);\r\n      }\r\n\r\n  render () { \r\n    console.log(this.props.data);\r\n    var value = this.props.choosevalue;\r\n    //var deleteFlag = this.props.data[\"deleteFlag\"];\r\n    \r\n    const a = this.props.data.map(({id, text, complete, deleteFlag}, index) => {\r\n        if (value == '1' && deleteFlag !== true) {\r\n            return  (<AppTodos \r\n                            key={index} \r\n                            id={id} \r\n                            text={text} \r\n                            complete={complete} \r\n                            ChangeCompleteItem={this.ChangeDone.bind(this)}                         \r\n                            DeleteItem={this.SubmitDelete.bind(this)}\r\n                      />\r\n            )        \r\n        }\r\n  \r\n        if (value == '2' && complete === false && deleteFlag !== true) {\r\n            return  <AppTodos \r\n                            key={index} \r\n                            id={id} \r\n                            text={text} \r\n                            complete={complete} \r\n                            ChangeCompleteItem={this.ChangeDone.bind(this)}                         \r\n                            DeleteItem={this.SubmitDelete.bind(this)}\r\n                      />\r\n        }\r\n  \r\n        if (value == '3' && complete === true && deleteFlag !== true) {\r\n            return  <AppTodos \r\n                            key={index} \r\n                            id={id} \r\n                            text={text} \r\n                            complete={complete} \r\n                            ChangeCompleteItem={this.ChangeDone.bind(this)}                         \r\n                            DeleteItem={this.SubmitDelete.bind(this)}\r\n                      />\r\n        }\r\n     })\r\n     /**\r\n     var output=[];\r\n     for(let i = 0; i< this.props.data.length; i++){ \r\n        const key = this.props.data[i][\"index\"];\r\n        const id = this.props.data[i][\"id\"];\r\n        const text = this.props.data[i][\"text\"];\r\n        const complete = this.props.data[i][\"complete\"];\r\n        const b = <AppTodos id = {id} key={key} text={text} complete={complete} />\r\n        output.push(b)\r\n     }\r\n    */\r\n   \r\n    \r\n\r\n    return (\r\n      <div> { a } </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default AppList;","import React from 'react';\r\nimport PlusOne from '@material-ui/icons/PlusOne';\r\n//import uuid from 'uuid';\r\n\r\nvar styles = {\r\n  'title': {\r\n    width: 200,\r\n    display: 'inline-block',\r\n    marginRight: 10,\r\n    verticalAlign: 'top'\r\n  }\r\n}\r\n\r\nclass AppForm extends React.Component {\r\n    handleSubmit (event) {\r\n        event.preventDefault()\r\n        let text = this.refs.text.value\r\n        \r\n        if (!text.trim()) {\r\n          alert(\"Input can't be null\")\r\n          return\r\n        }\r\n        \r\n        let id = Math.floor(Math.random()*10000);\r\n        this.props.AddTodoItem({id,text,complete:false, deleteFlag:false});\r\n      }\r\n    \r\n      render () {\r\n        return (\r\n          <form \r\n                  className='ui reply form' \r\n                  onSubmit={this.handleSubmit.bind(this)}>\r\n            <div \r\n              className='field' \r\n                style={styles.title}>\r\n              <input type='text' placeholder='Add a new todo....' ref='text' />\r\n            </div>\r\n            <button type='submit' className='ui blue button'>\r\n                Add\r\n            </button>\r\n          </form>\r\n        )\r\n      }\r\n    }\r\n    \r\n    export default AppForm;","/**\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/\n\n\nimport React from 'react'\nimport AppList from './AppList.js'\nimport AppForm from './AppForm.js'\n//import AppFooter from './AppFooter.js'\n\nclass App extends React.Component {\n  state = {\n      choosevalue : 1,\n      data: this.props.data\n  }\n  \n  ChooseValue (id) {\n    this.setState({choosevalue:id});\n  }\n\n  OnAddTodoItem (newItem) {\n    let newdata = this.state.data.concat(newItem);\n    this.setState({data : newdata});\n  }\n\n\n  //\n  AllChangeComplete (id) {\n    let newdata = this.state.data.map((item,index) => {\n        if(item.id == id) {\n          item.complete = !item.complete;\n        }\n        return item;\n    })\n    this.setState({data : newdata});\n  }\n\n  AllOnDeleteItem (id) {\n    console.log(id);\n    let newdata = this.state.data.map(function (item) {\n      console.log(item);\n      if (item.id == id) {\n        item.deleteFlag = true;\n      }\n      return item\n    })\n    this.setState({ data: newdata });\n  }\n  //  \n\n  render () {\n    const { data } = this.state; \n    return (\n      <div className='ui comments'>\n        <h1><font  face=\"Arial\" color = \"redblue\">CGU Todolist</font></h1>\n        <div className='ui divider'></div>\n        <AppForm \n          AddTodoItem={this.OnAddTodoItem.bind(this)} />\n        <AppList  \n          data={this.state.data} \n          choosevalue={this.state.choosevalue} \n          ChangeCompleteTop={this.AllChangeComplete.bind(this)}\n          DeleteItemTop={this.AllOnDeleteItem.bind(this)} \n        />\n      \n\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react'; \nimport ReactDOM from 'react-dom'; \nimport TextField from '@material-ui/core/TextField';\n/**\nclass MyForm extends React.Component { \n constructor(props) { \n super(props); \n this.state = { username: '' }; \n } \n myChangeHandler = (event) => {\n this.setState({username: event.target.value}); \n } \n render() { \n return ( \n <form> \n <h1>Hello {this.state.username}</h1> \n <h1><font color = \"lightblue\">CGU Todo List</font></h1> \n <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\n <input type='text' onChange={this.myChangeHandler} /> \n </form> \n ); \n } \n} \nReactDOM.render(<MyForm />, document.getElementById('root'));\n */\n\n/**\nvar todoItems = []; \nclass TodoApp extends React.Component { \n constructor (props) { \n super(props); \n\n } \n addItem(todoItem) { \n\n } \n removeItem (itemIndex) { \n\n } \n TodoDone(itemIndex) { \n\n } \n render() { \n return ( \n <div id=\"main\"> \n <ToDoTitle /> \n <ToDoAddForm /> \n <TodoList /> \n </div> \n ); \n } \n} \n\n\n\nclass ToDoTitle extends React.Component { \n  render () { \n  return <h1>CGU Todo list</h1>; \n  } \n }\n\n class ToDoAddForm extends React.Component { \n  constructor(props) { \n  super(props); \n  this.state = {value: ''}; \n  this.handleChange = this.handleChange.bind(this); \n  this.handleSubmit = this.handleSubmit.bind(this); \n  } \n  handleChange(event) { \n  this.setState({value: event.target.value}); \n  } \n  handleSubmit(event) { \n  this.setState({value: event.target.value}); \n  event.preventDefault(); \n  } \n  render() { \n  return ( \n  <form onSubmit={this.handleSubmit}> \n  <input type=\"text\" value={this.state.value} onChange={this.handleChange} /> \n  <input type=\"submit\" value=\"Submit\" /> \n  </form> \n  ); \n  } \n }\n\n class TodoList extends React.Component { \n  render () { \n    return <h1>CGU Todo list</h1>; \n  } \n }\n\n ReactDOM.render(<TodoApp initItems={todoItems}/>, document.getElementById('root'));\n */\n\n import App from './App'\n \n let data = [\n  {id: 0, text: '測試A!!!', complete: true, deleteFlag: false},\n  {id: 1, text: '測試B!!!', complete: false, deleteFlag: false},\n  {id: 2, text: '測試C!!!', complete: true, deleteFlag: false},\n ]\n \n ReactDOM.render(\n   <App data={data}/>,\n   document.getElementById('root')\n )\n\n\n\n/**\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n*/\n"],"sourceRoot":""}